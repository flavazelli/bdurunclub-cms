name: Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Authenticate with GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}  # Use Service Account Key JSON from GitHub secrets
        # OR if using Workload Identity Federation:
        # workload_identity_provider: "projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider"
        # service_account: "my-service-account@my-project.iam.gserviceaccount.com"

    - name: Authenticate Docker with Google Cloud
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Docker authentication for Artifact Registry
      run: |
        gcloud auth configure-docker northamerica-northeast2-docker.pkg.dev

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: northamerica-northeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/bdurunclub/backend:${{ github.sha }}
        
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - id: 'compute-ssh'
      uses: 'google-github-actions/ssh-compute@v1'
      with:
        instance_name: 'hobby-vm'
        zone: 'northamerica-northeast2-a'
        ssh_private_key: '${{ secrets.SSH_PRIVATE_KEY }}'
        script: |
          # Fetch the secret from Google Secret Manager (assumes `app_env` contains JSON key-value pairs)
          app_env_json=$(gcloud secrets versions access latest --secret="app_env" --format="json")

          # Create .env file and write each key-value pair to it
          echo "$app_env_json" | jq -r 'to_entries[] | "\(.key)=\(.value)"' > /opt/infra/docker-compose/.env

          # Pull and restart backend containers
          cd /opt/infra/docker-compose
          docker-compose pull && docker-compose up -d
